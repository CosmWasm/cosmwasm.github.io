"use strict";(self.webpackChunkcosmwasmsauru=self.webpackChunkcosmwasmsauru||[]).push([[6487],{7958:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"core/introduction","title":"Introduction","description":"This chapter will give you an overview over CosmWasm from a contract developer perspective, its","source":"@site/docs/core/introduction.md","sourceDirName":"core","slug":"/core/introduction","permalink":"/docs/core/introduction","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Welcome","permalink":"/docs/welcome"},"next":{"title":"Installation","permalink":"/docs/core/installation"}}');var n=s(4848),i=s(8453);const r={},a="Introduction",c={},d=[{value:"What is CosmWasm?",id:"what-is-cosmwasm",level:2},{value:"What does CosmWasm provide?",id:"what-does-cosmwasm-provide",level:2},{value:"What does CosmWasm <em>not</em> provide?",id:"what-does-cosmwasm-not-provide",level:2}];function l(e){const t={a:"a",admonition:"admonition",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"introduction",children:"Introduction"})}),"\n",(0,n.jsx)(t.p,{children:"This chapter will give you an overview over CosmWasm from a contract developer perspective, its\ncapabilities, and guide you through initializing your first smart contract."}),"\n",(0,n.jsx)(t.admonition,{type:"tip",children:(0,n.jsxs)(t.p,{children:["We assume you have a basic knowledge of Rust and Cargo (Rust's standard build system).\nIf not, have a look ",(0,n.jsx)(t.a,{href:"https://www.rust-lang.org/learn/get-started",children:"here"}),".\nNo worries, you don't need to be a Rust expert to write your first smart contract."]})}),"\n",(0,n.jsx)(t.h2,{id:"what-is-cosmwasm",children:"What is CosmWasm?"}),"\n",(0,n.jsx)(t.p,{children:"CosmWasm is a platform for writing smart contracts for Cosmos chains using Rust and WebAssembly.\nMeaning CosmWasm is your one-stop shop for developing, testing, and running smart contracts on\nenabled chains."}),"\n",(0,n.jsx)(t.h2,{id:"what-does-cosmwasm-provide",children:"What does CosmWasm provide?"}),"\n",(0,n.jsx)(t.p,{children:"For you, a contract developer, CosmWasm provides a set of high-quality primitives through our\nstandard library. These primitives include:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"extended precision arithmetic (128-, 256- and 512-bit integers),"}),"\n",(0,n.jsx)(t.li,{children:"cryptographic primitives (for example, secp256k1 verification),"}),"\n",(0,n.jsx)(t.li,{children:"interaction with the Cosmos SDK,"}),"\n",(0,n.jsx)(t.li,{children:"IBC connectivity."}),"\n"]}),"\n",(0,n.jsxs)(t.h2,{id:"what-does-cosmwasm-not-provide",children:["What does CosmWasm ",(0,n.jsx)(t.em,{children:"not"})," provide?"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Storage abstractions (for this, check out ",(0,n.jsx)(t.a,{href:"https://github.com/CosmWasm/cw-storage-plus",children:"cw-storage-plus"}),"."]}),"\n",(0,n.jsxs)(t.li,{children:["Testing framework (for this, check out ",(0,n.jsx)(t.a,{href:"https://github.com/CosmWasm/cw-multi-test",children:"cw-multi-test"}),"."]}),"\n"]})]})}function m(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>a});var o=s(6540);const n={},i=o.createContext(n);function r(e){const t=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);