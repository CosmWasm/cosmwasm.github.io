"use strict";(self.webpackChunkcosmwasmsauru=self.webpackChunkcosmwasmsauru||[]).push([[4386],{6511:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>m,contentTitle:()=>i,default:()=>l,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"welcome","title":"Welcome","description":"The [x/wasm] module, the root of CosmWasm, is a [Cosmos SDK] module enabling smart contracts","source":"@site/docs/welcome.md","sourceDirName":".","slug":"/welcome","permalink":"/docs/welcome","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","next":{"title":"Introduction","permalink":"/docs/core/introduction"}}');var n=o(4848),a=o(8453);const r={sidebar_position:1},i="Welcome",m={},c=[];function d(e){const t={a:"a",h1:"h1",header:"header",mermaid:"mermaid",p:"p",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"welcome",children:"Welcome"})}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.a,{href:"https://github.com/CosmWasm/wasmd/tree/main/x/wasm",children:"x/wasm"})," module, the root of CosmWasm, is a ",(0,n.jsx)(t.a,{href:"https://docs.cosmos.network/",children:"Cosmos SDK"})," module enabling smart contracts\nto execute on the CosmWasm virtual machine. CosmWasm itself refers to the whole ecosystem\nbuilt around it with a mission to make smart contract development easy and reliable.\nThe focus of the CosmWasm platform are security, performance, and interoperability.\nIt is tailored for a tight integration with Cosmos SDK and to build IBC contracts."]}),"\n",(0,n.jsx)(t.p,{children:"We chose to target a Rust programming language as a smart contract development stack, as it is\npopular amongst blockchain developers and has the best Wasm compiler on the market so far. We do not\nprovide bindings to help write smart contracts in another stack that compiles to Wasm, and we don't\nsupport that."}),"\n",(0,n.jsx)(t.p,{children:"Here is where to find CosmWasm in the whole Cosmos stack:"}),"\n",(0,n.jsx)(t.mermaid,{value:'erDiagram\n    "Cosmos SDK" ||--|| CometBFT: Uses\n    "Cosmos SDK" ||--|| "CosmWasm": Includes\n    "Cosmos SDK" ||--o{ "Custom Module" : Includes\n    "CosmWasm" ||--o{ "Smart Contract": Executes'}),"\n",(0,n.jsxs)(t.p,{children:["The important thing about CosmWasm smart contracts is their transparency. Every smart contract\ninstance has its unique address on the chain, and it can act just like any other account on chain.\nIt is easy to implement communication between two smart contracts on the same chain. CosmWasm\nstandard library provides simple utilities to communicate with non-CosmWasm modules on the chain.\nThat includes common Cosmos modules like bank or staking and any custom module unique for a\nparticular chain. Finally, CosmWasm is built around the ",(0,n.jsx)(t.a,{href:"https://www.ibcprotocol.dev/",children:"IBC"})," and provides a simple API\nto communicate with other chains and contracts using IBC-based protocols."]}),"\n",(0,n.jsxs)(t.p,{children:["This documentation already covers most of the stack. Still, some parts are a work in progress.\nIf there is something you remember being here in the old documentation, you can find its content\nat ",(0,n.jsx)(t.a,{href:"https://github.com/CosmWasm/docs-deprecated",children:"https://github.com/CosmWasm/docs-deprecated"}),". Remember that the old documentation is deprecated,\nmostly outdated, and will not be maintained. We would appreciate any GitHub issues about missing\nparts in the ",(0,n.jsx)(t.a,{href:"https://github.com/CosmWasm/cosmwasm.github.io",children:"documentation repository"}),"."]})]})}function l(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>r,x:()=>i});var s=o(6540);const n={},a=s.createContext(n);function r(e){const t=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);